apply plugin: 'com.android.application'
// generate coverage while running unit tests
// (android gradle plugin only generates coverage for androidTest)
apply plugin: 'jacoco'

android {
    compileSdkVersion 25
    buildToolsVersion "26.0.1"

    dataBinding {
        enabled = true
    }

    defaultConfig {
        applicationId "net.oldev.aDictOnCopy"
        minSdkVersion 11
        targetSdkVersion 24
        
        def vMajor = 0
        def vMinor = 3
        def vPatch = 36
        versionCode vMajor * 10000 + vMinor * 100 + vPatch
        versionName "${vMajor}.${vMinor}.${vPatch}"

        resConfigs "en"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        releaseConfig {
            if (project.hasProperty("releaseStoreFile")) {
                storeFile file(releaseStoreFile)
            } else {
                storeFile file("keystore")
            }
            if (project.hasProperty("releaseStorePassword")) {
                storePassword releaseStorePassword
            } else {
                storePassword "password"
            }
            if (project.hasProperty("releaseKeyAlias")) {
                keyAlias releaseKeyAlias
            } else {
                keyAlias "alias"
            }
            if (project.hasProperty("releaseKeyPassword")) {
                keyPassword releaseKeyPassword
            } else {
                keyPassword "password"
            }
        }
    }

    buildTypes {
        debug {
            // allow debug / release be installed as separate apps, 
            // versionNameSuffix helps to differentiate them visually
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            // testCoverageEnabled  needed for androidTest code coverage: it generates tasks
            // createDebugCoverageReport and createDebugAndroidTestCoverageReport
            // (createDebugCoverageReport only runs androidTest, as of android gradle 2.3.3)
            testCoverageEnabled true
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    testOptions {
        // Needed so that Log statements using android Log won't cause unit tests fail
        unitTests.returnDefaultValues = true

        unitTests.all {
            jacoco {
                append = false  // overwrite previous run data
                includeNoLocationClasses = true  // needed for unit test code coverage with jacoco with android gradle 2.2+
            }
        }
    }

    dexOptions {
        preDexLibraries true // make incremental builds faster, but might slow down clean build
    }

    aaptOptions {
        additionalParameters "--no-version-vectors"
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java']
        }
        // share codes between test and androidTest by adding sharedTest
        // to the source sets of both of them
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDir sharedTestDir
        }
    }

}

/*
 * Creates coverage report combining both unit tests and androidTests
 *
 * Reports can be found at $buildDir/reports/jacoco/createDebugCombinedCoverageReport/html/index.html
 * (Different location from the one by
 *  android gradle's createDebugCoverageReport, which is for androidTests only)
 *
 * @see Based on https://medium.com/@rafael_toledo/setting-up-an-unified-coverage-report-in-android-with-jacoco-robolectric-and-espresso-ffe239aaf3fa
 *
 */
task createDebugCombinedCoverageReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'connectedDebugAndroidTest']) {
    description "Creates test coverage reports combining both unit tests and androidTests of the debug variant."
    group "verification"

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*',
                      '**/BR.class', '**/databinding/*', // android data binding library artifacts
                      '**/*Dagger*.*', '**/*MembersInjector*.*', '**/*_Provide*Factory*.*', // Dagger auto-generated code.
                      '**/Manifest*.*',
                      '**/*Test*.*',
                      'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec", // default unit test coverage data location, unless customized in unitTests.all > jacoco
            "outputs/code-coverage/connected/*coverage.ec"
    ])
}

ext {
    supportLibVersion = "25.4.0"
    daggerVersion = "2.11"
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "com.google.dagger:dagger:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"

    // Upgrade support lib version to be compatible with Android Testing Support Library
    compile "com.android.support:support-annotations:$supportLibVersion"

    testCompile 'junit:junit:4.12'

    androidTestCompile "com.google.dagger:dagger:$daggerVersion"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"

    androidTestCompile 'com.android.support.test:runner:1.0.0'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:3.0.0'
}

// To make dagger2 compatible with android data binding
// @see https://github.com/google/dagger/issues/306
gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xmaxerrs" << "500"
    }
}
